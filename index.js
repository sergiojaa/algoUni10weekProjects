// ### პროექტი 49 - Vanity Plates - სანომრე ნიშნები

// მასაჩუსეტში შეგიძლიათ თქვენი მანქანისთვის თქვენთვის სასურველი სანომრე ნიშნები აიღოთ, იმ ასოებითა და ციფრებით, 
//რაც გნებავთ, მაგრამ რამდენიმე წესი უნდა იყოს დაცული:

// - ყველა სანომრე ნიშანი უნდა იწყებოდეს მინიმუმ ორი ასოთი.
// - შეიძლება შეიცავდეს მაქსიმუმ 6 სიმბოლოს (ასოს ან რიცხვს) და მინიმუმ 2 სიმბოლოს.
// - ციფრების გამოყენება არ შეიძლება სანომრე ნიშნის შუაში; ისინი ბოლოს უნდა იყოს. მაგალითად, AAA222 იქნება მისაღები,
// თუმცა AAA22A ამ წესს ვერ დააკმაყოფილებს.
// - გამოყენებული პირველი რიცხვი არ შეიძლება იყოს "0".
// - დაშვებული არ არის წერტილების, სივრცეების (space) და პუნქტუაციის ნიშნების გამოყენება.

// შექმენით პროგრამა, რომელიც მოუწოდებს მომხმარებელს სანომრე ნიშნის შეყვანისკენ და და შემდეგ output-ად გამოაქვს ან 
//valid (თუ ნიშნები აკმაყოფილებს ყველა მოთხოვნას), ან - Invalid. დაუშვით, რომ მომხმარებლის input-ის ყველა ასო იქნება დიდი.

// Example Output
// ```shell
// > Plate: HELLO
// > Valid
// > Plate: HELLO, WORLD
// > Invalid
// > Plate: GOODBYE
// > Invalid
// > Plate: 50
// > Invalid
// > Plate: BTCMP5
// > Valid
// > Plate: BTCMP0
// > Invalid
// ```
// let number = ['a000']
// if(!(typeof number[0] === 'string') || !(typeof number[1] === 'String') ){
//     console.log('sanomre nishani unda iwkebodes minimum ori asoti')
// }else if(!(number.length < 8) ||  ){
//     console.log('kodi mshvenieria')
// }

// ### პროექტი 50 - Handling Bad Input - ცუდი Input-ის მართვა

// 72-ის წესი სწრაფი მეთოდია იმის შესაფასებლად, თუ რამდენი ხანი დასჭირდება თქვენი ინვესტიციის გაორმაგებას.
//  ამის გამოსათვლელად 72 მის მოსალოდნელ შემოსავალზე (ROR) უნდა გავყოთ. ეს კარგი ინსტრუმენტია, რომელიც 
//  დაგეხმარებათ გაარკვიოთ, არის თუ არა აქციები, ობლიგაციები ან ანაბრები თქვენთვის მომგებიანი. ასევე, კარგი 
//  პროგრამაა input-ის გასატესტად, რადგან რადგან კომპიუტერებს ნულზე გაყოფა არ შეუძლიათ.

// იმის ნაცვლად, რომ პროგრამა შეაჩეროთ, როდესაც მომხმარებელი არასწორ input-ს შეიყვანს, შეგიძლიათ უბრალოდ 
// განაგრძოთ input-ის მოთხოვნა, სანამ არ მიიღებთ ვალიდურ ჩანაწერს. შექმენით კალკულატორი, რომელიც მოგთხოვთ 
// ინვესტიციის Rate of Return-ს (ROR) და გამოთვლის, რამდენი წელი დასჭირდება თქვენი ინვესტიციის გაორმაგებას.

// ფორმულა შემდეგია: years = 72 /r, სადაც r არის ROR-ის მითითებული მაჩვენებელი.

// Example Output

// ```shell
// > What is the rate of return? 0
// > Sorry. That's not a valid input.
// > What is the rate of return? ABC
// > Sorry. That's not a valid input.
// > What is the rate of return? 4
// > It will take 18 years to double your initial investment.
// ```

// - არ მისცეთ მომხმარებელს საშუალება, პროგრამაში ჩაწეროს 0.
// - არ მისცეთ საშუალება, ჩაწეროს არა-რიცხვითი input.
// - გამოიყენეთ ციკლი (loop) ცუდი input-ისთვის, რათა დარწმუნდეთ, რომ მომხმარებელი ვალიდურ მნიშვნელობას შეიყვანს.
// const question = parseInt(prompt('what is the rate of return?'))
// if(question === 0 ){
//     console.log('0 ar chawero')
// }else if(isNaN === question){
//     console.log('chaweret mxolodcifri')
// }else{
//     console.log(` it will take  ${72 / question} years to double initial investment`)
// }

// ### პროექტი 51 - Multiplication Table - გამრავლების ტაბულა

// შექმენით პროგრამა, რომელიც დააგენერირებს გამრავლების ტაბულას რიცხვებისთვის 0-დან 12-მდე.

// Example Output

// ```shell
// > 0 X 0 = 0
// > 0 X 1 = 0
// ...
// > 12 x 11 = 132
// > 12 x 12 = 144
// ```

// - გამოიყენეთ nested loop ამ პროგრამის დასასრულებლად.
// Generate the multiplication table for numbers 0 to 12
// for(let i = 0;i < 12;i++){
//     for(let j = 0;j <=12;j++){
//         console.log(` ${i} * ${j} = ${i * j} `)
//     }
// }
// ### პროექტი 52 - Karvonen Heart Rate

// Karvonen Heart Rate არის ერთ-ერთი მეთოდი თქვენი პულსის დადგენისთვის. შექმენით პროგრამა, 
// რომელიც შეეკითხება მოხმარებელს მის ასაკსა და გულისცემას, შემდეგ კი ამ მონაცემებზე დაყრდნობით 
// დაითვლის პულსს,
// სხვადასხვა ინტენსიურობის მიხედვით (55 % -იდან 95 % -მდე). გამოიტანეთ ამ ყველაფრის ამსახველი 
// ცხრილი. ისეთი, როგორიც მაგალითშია ნაჩვენები.

// - გამოსათვლელი ფორმულა: TargetHeartRate = (((220 - age) - restingHR) \* intensity) + restingHR

// მაგალითად:

// ```shell
// $ Resting Pulse: 65 Age: 22
// $ Intensity | Rate
// $ -------------|--------
// $ 55% | 138 bpm
// $ 60% | 145 bpm
// $ 65% | 151 bpm
// $ : : ( სხვა ხაზები )
// $ 85% | 178 bpm
// $ 90% | 185 bpm
// $ 95% | 191 bpm
// ```

// - ხელით არ დაწეროთ პროცენტები, გამოიყენეთ ციკლი და გაზარდეთ 5 პროცენტით 55-95 მნიშვნელობები.
// - გააკეთეთ ვალიდაცია, არ მისცეთ მომხმარებელს საშუალება რომ შეიყვანოს input-ში რიცხვების გარდა სხვა სიმბოლოები.